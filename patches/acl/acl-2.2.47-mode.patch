diff -ur acl-2.2.47/getfacl/getfacl.c acl-2.2.47-mode/getfacl/getfacl.c
--- acl-2.2.47/getfacl/getfacl.c	2008-02-07 04:39:57.000000000 +0100
+++ acl-2.2.47-mode/getfacl/getfacl.c	2008-10-27 11:19:41.000000000 +0100
@@ -498,6 +498,7 @@
 			       xquote(user_name(st->st_uid, opt_numeric)));
 			printf("# group: %s\n",
 			       xquote(group_name(st->st_gid, opt_numeric)));
+			printf("# mode: %04o\n", st->st_mode & 07777);
 		}
 		if (acl != NULL) {
 			char *acl_text = acl_to_any_text(acl, NULL, '\n',
diff -ur acl-2.2.47/include/acl.h acl-2.2.47-mode/include/acl.h
--- acl-2.2.47/include/acl.h	2007-09-11 04:00:47.000000000 +0200
+++ acl-2.2.47-mode/include/acl.h	2008-10-27 14:41:24.000000000 +0100
@@ -69,6 +69,7 @@
 /* 23.2.7 ACL qualifier constants */
 
 #define ACL_UNDEFINED_ID	((id_t)-1)
+#define ACL_UNDEFINED_MODE	((mode_t)-1)
 
 /* 23.2.8 ACL Entry Constants */
 
diff -ur acl-2.2.47/setfacl/parse.c acl-2.2.47-mode/setfacl/parse.c
--- acl-2.2.47/setfacl/parse.c	2007-09-11 04:00:49.000000000 +0200
+++ acl-2.2.47-mode/setfacl/parse.c	2008-10-27 14:42:18.000000000 +0100
@@ -173,6 +173,21 @@
 }
 
 
+static int
+get_mode(
+	const char *token,
+	mode_t *mode_p)
+{
+	char *ep;
+	long l;
+	l = strtol(token, &ep, 8);
+	if (*ep != '\0')
+		return -1;
+	*mode_p = l;
+	return 0;
+}
+
+
 /*
 	Parses the next acl entry in text_p.
 
@@ -409,7 +424,8 @@
 	int *line,
 	char **path_p,
 	uid_t *uid_p,
-	gid_t *gid_p)
+	gid_t *gid_p,
+	mode_t *mode_p)
 {
 	int c;
 	char linebuf[1024];
@@ -423,6 +439,8 @@
 		*uid_p = ACL_UNDEFINED_ID;
 	if (gid_p)
 		*gid_p = ACL_UNDEFINED_ID;
+	if (mode_p)
+		*mode_p = ACL_UNDEFINED_MODE;
 
 	for(;;) {
 		c = fgetc(file);
@@ -487,6 +505,16 @@
 				if (get_gid(unquote(cp), gid_p) != 0)
 					continue;
 			}
+		} else if (strncmp(cp, "mode:", 5) == 0) {
+			cp += 5;
+			SKIP_WS(cp);
+				
+			if (mode_p) {
+				if (*mode_p != ACL_UNDEFINED_MODE)
+					goto fail;
+				if (get_mode(unquote(cp), mode_p) != 0)
+					continue;
+			}
 		}
 	}
 	if (ferror(file))
diff -ur acl-2.2.47/setfacl/parse.h acl-2.2.47-mode/setfacl/parse.h
--- acl-2.2.47/setfacl/parse.h	2007-09-11 04:00:49.000000000 +0200
+++ acl-2.2.47-mode/setfacl/parse.h	2008-10-27 11:25:32.000000000 +0100
@@ -64,7 +64,8 @@
 	int *line,
 	char **path_p,
 	uid_t *uid_p,
-	gid_t *gid_p);
+	gid_t *gid_p,
+	mode_t *mode_p);
 int
 read_acl_seq(
 	FILE *file,
diff -ur acl-2.2.47/setfacl/setfacl.c acl-2.2.47-mode/setfacl/setfacl.c
--- acl-2.2.47/setfacl/setfacl.c	2008-02-07 04:39:57.000000000 +0100
+++ acl-2.2.47-mode/setfacl/setfacl.c	2008-10-27 14:43:22.000000000 +0100
@@ -125,6 +125,7 @@
 	struct stat stat;
 	uid_t uid;
 	gid_t gid;
+	mode_t mode;
 	seq_t seq = NULL;
 	int line = 0, backup_line;
 	int error, status = 0;
@@ -133,7 +134,7 @@
 
 	for(;;) {
 		backup_line = line;
-		error = read_acl_comments(file, &line, &path_p, &uid, &gid);
+		error = read_acl_comments(file, &line, &path_p, &uid, &gid, &mode);
 		if (error < 0)
 			goto fail;
 		if (error == 0)
@@ -197,6 +198,17 @@
 				status = 1;
 			}
 		}
+
+		if (!opt_test &&
+				mode != ACL_UNDEFINED_MODE) {
+			if (chmod(path_p, mode) != 0) {
+				fprintf(stderr, _("%s: %s: Cannot change "
+					          "permissions: %s\n"),
+					progname, xquote(path_p),
+					strerror(errno));
+				status = 1;
+			}
+		}
 resume:
 		if (path_p) {
 			free(path_p);
